#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>

//int main() //打印9*9乘法表
//{
//	int i = 0;
//	for (i = 1; i <= 9; i++) //控制外层
//	{
//		int j = 0;
//		for (j = 1; j <= i; j++)//计算内层
//		{
//			printf("%d*%d=%2d ",i, j, i*j);
//		}
//		printf("\n");
//	}
//	return 0;
//}  


//is_sushuo(int n)
//{
//	int j = 0;
//		for (j = 2; j < n; j++)
//		{
//			if (n % j == 0)
//			{
//				return 0;
//			}
//		}
//		return 1;
//}
//
//int main()
//{
//	int i = 0;
//	int count = 0;
//	for (i = 100; i <= 200; i++)
//	{
//		if((is_sushuo(i) == 1))
//		{
//			count++;
//			printf("%d ", i);
//		}
//	}
//	printf("\n素数的数量为%d \n", count);
//	return 0;
//}
// 
// 
//int is_runnian(int n)//我的代码
//{
//	if ((n % 4 == 0 && n % 100 != 0) || (n % 400 == 0))
//	{
//		return 1;
//	}
//	else
//	{
//		return 0;
//	}
//}

//int is_runnian(int n)
//{
//	return((n % 4 == 0 && n % 100 != 0) || (n % 400 == 0));
//}

//int main()
//{
//	int i = 0;
//	int count = 0;
//	for (i = 1000; i <= 2000; i++)
//	{
//		if(is_runnian(i) == 1)
//		{
//			count++;
//			printf("%d ", i);
//		}
//	}
//	
//	printf("\n闰年的次数是：%d次\n", count);
//	return 0;
//}

//int binary_search(int a[], int x, int y)
//{
//	int left = 0;
//	int right = y - 1;
//
//	while (left <= right)
//	{
//
//		int mid = (left + right) / 2;
//
//		if (a[mid] < x)
//		{
//			left = mid + 1;
//		}
//		else if (a[mid] > x)
//		{
//			right = mid - 1;
//		}
//		else
//		{
//			return mid;
//		}
//	}
//	return -1;
//}
//
//
//int main()
//{
//	int arr[] = { 1,2,3,4,5,6,7,8,9,10 };
//	int key = 7;
//	int sz = sizeof(arr) / sizeof(0);
//	int ret = binary_search(arr, key, sz);
//	if (binary_search == -1)
//	{
//		printf("找不到");
//	}
//	else
//	{
//		printf("找到了，下标是%d \n", ret);
//	}
//	return 0;
//}



//int main()
//{
//	int a = 10;
//	int b = 20;
//	int jiaohuan(int x, int y);
//
//	printf("%d %d\n", a, b);
//	jiaohuan(&a, &b);
//	printf("%d %d\n", a, b);
//
//	return 0;
//}
//
//int jiaohuan(int* pa, int* pb)
//{
//	int z = *pa;
//	*pb = *pa;
//	*pa = z;
//}

int main()
{
	int i = 0;
	int mt(int x);

	scanf("%d", &i);

	mt(i);
	return 0;
}

int mt(int x)
{
	for (int i = 1; i <= x; i++)
	{
		
		for (int j = 1; j <= i; j++)
		{
			printf("%d*%d=%2d ", x, j, x * j);
		}
		printf("\n");
	}
}